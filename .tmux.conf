# Make it use C-a, similar to screen..
unbind C-b
#unbind l
set -g prefix C-a
#bind-key C-a last-window
bind-key C-b last-window
bind-key C-space next-window
bind-key C-n next-window

# native xterm scrolling with a mouse
set-window-option -g mode-mouse on
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# windows and panes numbering starting at 1
set -g base-index 1
set -g pane-base-index 1

# moving between pans
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
 
# Reload key
bind r source-file ~/.tmux.conf

# Some issues with background in vim (it seems it's usless, disabling it)
# set -g default-terminal "xterm-256color"

set -g history-limit 100000

# THEME
# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[bg=white,fg=colour000,bold] #I #[fg=black]#[bg=colour15] #W "
setw -g window-status-current-format "#[bg=white,fg=colour233,bold] #I #[fg=black]#[bg=colour15] #W "
setw -g window-status-current-attr dim
setw -g window-status-attr reverse
# status line
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-interval 60
set -g status-attr dim
set -g status-left '#[bg=colour245,fg=colour233,bold][#S] #(whoami)@#h #[default] '
set -g status-right '#[fg=colour233,bg=colour245,bold] #(cut -d " " -f 1-3 /proc/loadavg) #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

# activity monitoring
setw -g monitor-activity on
set -g visual-activity on

set-window-option -g window-status-current-bg blue 

# window titles
set -g set-titles on
set -g set-titles-string "#T"

# copy paste to system clipboard
bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# mouse selecting stuff
#set -g mode-mouse on
# pane switching using mouse
#set-option -g mouse-select-pane on

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
